apiVersion: landscaper.gardener.cloud/v1alpha1
kind: Installation
metadata:
  name: virtual-cluster
  generation: 6
spec:

  definitionRef: eu.gcr.io/gardener-project/dev/github/com/gardener/gardener:v1.7.2

#  target: fencedEnv1 # => class.deployer.landscaper.gardener.cloud = fencedEnv1

  imports: # generated from aggregated definition or default from definition with from = to
  - from: .kubeconfig
    to: .kubeconfig

  - from: .kubeconfigs.base
    to: .kubeconfig

  - from: .dep.helmchart.etcd
    to: .helmchart.etcd
  - from: .dep.helmchart.kube-apiserver-controllermanager
    to: .helmchart.kube-apiserver-controllermanager
  - from: .dep.image.etcd
    to: .images.etcd
  - from: .dep.image.etcdbr
    to: .images.etcdbr
  - from: .dep.image.kube-apiserver
    to: .images.kube-apiserver
  - from: .dep.image.kube-controllermanager
    to: .images.kube-controllermanager

  - from: .common.namespace
    to: .namespace

  - from: .virtual.etcd.backup.active
    to: .backup.active

  - from: .virtual.etcd.backup.bucketPrefix
    to: .backup.bucketPrefix
  - from: .blobstore.credentials # from techincal-users
    to: .backup.blobstore.credentials
  - from: .virtual.etcd.backup.blobstore.credentialRef # one pointer in the above credentials
    to: .backup.blobstore.credentialRef
  - from: .virtual.etcd.backup.blobstore.region
    to: .backup.blobstore.region
    # TODO: define default only if this region can be used by other components
  - from: .virtual.etcd.backup.blobstore.providerConfig # (i.e. resourcegroup on az)
    to: .backup.blobstore.providerConfig

  ###  kube-apiserver
  - from: .dns.domains.gardenSystem.virtual.domain
    to: .base.domain

  - from: .dns.domainPrefixes.virtual-apiserver
    to: .prefix.domain

  - from: .networkpolicies.active
    to: .networkpolicies.active

  - from: .dns.class # used to register the kube-apiserver domain, exported from dns component
    to: .dnsClass

  - from: .virtual.vpa.active
    to: .vpaActive
    # TODO: provide imports for vpa config + what about hvpa?

  - from: .auditlog.active
    to: .auditlog.active
  - from: .auditlog.kubeconfig # i.e. from sap-auditlog component
    to: .auditlog.kubeconfig
  - from: .virtual.auditlog.policy
    to: .policy

  - from: .identity.active # from static export of identity component
    to: .identity.active
  - from: .identity.issuerURL # for dashboard/api-server auth callbacks
    to: .identity.issuerURL
  - from: .identity.api.endpoint # for dashboard/api-server doing grcp to add themself
    to: .identity.api.endpoint
  - from: .identity.api.caPrivatefrom # clients to api.endpoint will need to have a client cert signed by this caPrivatefrom
    to: .identity.api.caPrivatefrom
  - from: .identity.cert # identity server side cert (chain)
    to: .identity.cert

  exports:
  - from: mykey.spec.config.ingressclass
    to: ingressClass

  - to: .virtual.etcd.endpoints.main
    from: .etcd.endpoints.main

  - to: .virtual.etcd.endpoints.events
    from: .etcd.endpoints.events

  - to: .virtual.etcd.cert # server cert
    from: .etcd.cert

  - to: .virtual.apiserver.cert # server cert
    from: .apiserver.cert

  - to: .virtual.apiserver.endpoint.internal
    from: .apiserver.endpoint.internal

  - to: .kubeconfigs.virtual # an external reachable "kubeconfig"
    from: .virtualAdminKubeconfig

  staticData:
  - value: # map[string]interface{}
      configkey1: val1
  - valueFrom:
      secretKeyRef:
        name: mysecret
        key: key1 # default to "config" we expect map[string]interface{}
  - valueFrom:
      secretLabelSelector:
        selector:
          my-app: mysecret-label
        key: key1 # default to "config" we expect map[string]interface{}


status:
  phase: Progressing | Pending | Completed

  imports:
  - from: .kubeconfigs.base
    installationRef:
      name: xyz
      namespace: default
    configGeneration: 2

  deployItemRefs:
  - name: my-step
    ref:
      name: abc --> OwnerRef
      namespace: default

  installationRefs:
  - name: my-sub-component
    ref:
      name: Installation1 --> OwnerRef
      namespace: default
  - name: my-other-sub
    ref:
      name: Installation2 --> OwnerRef
      namespace: default

  configGeneration: 0
  exportRef: my-secret --> OwnerRef