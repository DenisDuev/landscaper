apiVersion: landscaper.gardener.cloud/v1alpha1
kind: Blueprint

name: my-component-definition
version: 1.0.0

import:
- key: dnsControllerClass | common.dnsControllerClass
  type: string
  default:
    value: ""
#      ref: common.dnsControllerClass # tbd
- key: abc
  type: number

export:
- key: a.b
  type: mytype
- key: ijk
  type: string

blueprintRefs:
- name: my-sub-component # defaulted to the name of the component
  ref: my-sub-component:1.1.0 # 1.0.0-dev-abcdefg # --> gitlink://my-sub-component --> gitlink://my-sub-component:1.0.0-dev
  imports:
  - from: abc
    to: yxz
    default: abc
  exports:
  - from: efg
    to: ijk
- name: my-other-sub
  ref: my-other-sub-component:0.0.5
  imports:
  - from: abc2
    to: yxz2
  exports:
  - from: efg2
    to: ijk2

executors: | # has to be idempotent
  - name: init
    type: container # also extensions resource
    config:
      image: my-custom-image:version
      command: ["run-component"]
      args: []
  - name: my-script
    type: script
    environment: ls-abc
    config:
      mount:
        artifact: xyz
        path: /repo
      script: |
        #!/bin/python3

        import os

        yaml.load(os.genenv('IMPORT_CONFIG'))

        doStuff()

        yaml.dump(export)
      image: ubuntu:latest
  - name: my-container
    type: container
    config:
      image: my-custom-image:version
      command: ["run-component"]
      args: []
  - name: deploy-chart
    type: helm
    config:
      chartRepository: my-repo
      version: 1.0.0
      values: {{ .exports.mykey.x }}
      valueRef:
        secretRef: abc
  - name: deploy-other-chart
    type: helm
    config:
      chartRepository: my-repo/dns-controller
      version: 1.0.0
      values:
        instanceID: {{ .imports.dnsController }}
        ca: {{ state "key" function }}
      valueRef:
        secretRef: abc
  - name: deploy-manifest
    type: manifest
    config:
    - apiVersion: v1
      kind: Secret
      metdata:
        name: abc
      data:
        value1: {{ .import.my-import.value1 }}
        value2: (( .import.my-import.value2 ))
status:

  executionRef:
    name: abc
    namespacE: default