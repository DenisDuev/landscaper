
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.3.0
  creationTimestamp: null
  name: components.landscaper.gardener.cloud
spec:
  group: landscaper.gardener.cloud
  names:
    kind: Component
    listKind: ComponentList
    plural: components
    singular: component
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: ComponentDefinition contains the configuration of a component
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            properties:
              definitionRef:
                type: string
              exports:
                items:
                  properties:
                    from:
                      type: string
                    to:
                      type: string
                    type:
                      type: string
                  required:
                  - from
                  - to
                  - type
                  type: object
                type: array
              imports:
                items:
                  properties:
                    default:
                      properties:
                        ref:
                          type: string
                        value:
                          description: RawMessage is a raw encoded JSON value. It
                            implements Marshaler and Unmarshaler and can be used to
                            delay JSON decoding or precompute a JSON encoding.
                          format: byte
                          type: string
                      required:
                      - ref
                      - value
                      type: object
                    from:
                      type: string
                    required:
                      type: boolean
                    to:
                      type: string
                    type:
                      type: string
                  required:
                  - default
                  - from
                  - to
                  - type
                  type: object
                type: array
            required:
            - definitionRef
            - exports
            - imports
            type: object
          status:
            properties:
              configGeneration:
                format: int64
                type: integer
              executors:
                items:
                  description: ExecutorState tracks the state of a executor
                  properties:
                    conditions:
                      description: Conditions contains the last observed conditions
                        of the component.
                      items:
                        description: Condition holds the information about the state
                          of a resource.
                        properties:
                          codes:
                            description: Well-defined error codes in case the condition
                              reports a problem.
                            items:
                              description: ErrorCode is a string alias.
                              type: string
                            type: array
                          lastTransitionTime:
                            description: Last time the condition transitioned from
                              one status to another.
                            format: date-time
                            type: string
                          lastUpdateTime:
                            description: Last time the condition was updated.
                            format: date-time
                            type: string
                          message:
                            description: A human readable message indicating details
                              about the transition.
                            type: string
                          reason:
                            description: The reason for the condition's last transition.
                            type: string
                          status:
                            description: Status of the condition, one of True, False,
                              Unknown.
                            type: string
                          type:
                            description: Type of the Shoot condition.
                            type: string
                        required:
                        - lastTransitionTime
                        - lastUpdateTime
                        - message
                        - reason
                        - status
                        - type
                        type: object
                      type: array
                    phase:
                      type: string
                    resource:
                      description: 'ObjectReference contains enough information to
                        let you inspect or modify the referred object. --- New uses
                        of this type are discouraged because of difficulty describing
                        its usage when embedded in APIs.  1. Ignored fields.  It includes
                        many fields which are not generally honored.  For instance,
                        ResourceVersion and FieldPath are both very rarely valid in
                        actual usage.  2. Invalid usage help.  It is impossible to
                        add specific help for individual usage.  In most embedded
                        usages, there are particular     restrictions like, "must
                        refer only to types A and B" or "UID not honored" or "name
                        must be restricted".     Those cannot be well described when
                        embedded.  3. Inconsistent validation.  Because the usages
                        are different, the validation rules are different by usage,
                        which makes it hard for users to predict what will happen.  4.
                        The fields are both imprecise and overly precise.  Kind is
                        not a precise mapping to a URL. This can produce ambiguity     during
                        interpretation and require a REST mapping.  In most cases,
                        the dependency is on the group,resource tuple     and the
                        version of the actual struct is irrelevant.  5. We cannot
                        easily change it.  Because this type is embedded in many locations,
                        updates to this type     will affect numerous schemas.  Don''t
                        make new APIs embed an underspecified API type they do not
                        control. Instead of using this type, create a locally provided
                        and used type that is well-focused on your reference. For
                        example, ServiceReferences for admission registration: https://github.com/kubernetes/api/blob/release-1.17/admissionregistration/v1/types.go#L533
                        .'
                      properties:
                        apiVersion:
                          description: API version of the referent.
                          type: string
                        fieldPath:
                          description: 'If referring to a piece of an object instead
                            of an entire object, this string should contain a valid
                            JSON/Go field access statement, such as desiredState.manifest.containers[2].
                            For example, if the object reference is to a container
                            within a pod, this would take on a value like: "spec.containers{name}"
                            (where "name" refers to the name of the container that
                            triggered the event) or if no container name is specified
                            "spec.containers[2]" (container with index 2 in this pod).
                            This syntax is chosen only to have some well-defined way
                            of referencing a part of an object. TODO: this design
                            is not final and this field is subject to change in the
                            future.'
                          type: string
                        kind:
                          description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                          type: string
                        name:
                          description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                          type: string
                        namespace:
                          description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                          type: string
                        resourceVersion:
                          description: 'Specific resourceVersion to which this reference
                            is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                          type: string
                        uid:
                          description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                          type: string
                      type: object
                  required:
                  - phase
                  type: object
                type: array
              imports:
                items:
                  description: ImportState hold the state of a import
                  properties:
                    component:
                      type: string
                    configGeneration:
                      format: int64
                      type: integer
                    from:
                      type: string
                  required:
                  - component
                  - configGeneration
                  - from
                  type: object
                type: array
              phase:
                type: string
            required:
            - configGeneration
            type: object
        required:
        - spec
        - status
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
