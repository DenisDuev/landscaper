// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/gardener/landscaper/pkg/landscaper/registry (interfaces: Registry)

// Package mock_registry is a generated GoMock package.
package mock_registry

import (
	context "context"
	v2 "github.com/gardener/component-spec/bindings-go/apis/v2"
	v1alpha1 "github.com/gardener/landscaper/pkg/apis/core/v1alpha1"
	gomock "github.com/golang/mock/gomock"
	afero "github.com/spf13/afero"
	reflect "reflect"
)

// MockRegistry is a mock of Registry interface
type MockRegistry struct {
	ctrl     *gomock.Controller
	recorder *MockRegistryMockRecorder
}

// MockRegistryMockRecorder is the mock recorder for MockRegistry
type MockRegistryMockRecorder struct {
	mock *MockRegistry
}

// NewMockRegistry creates a new mock instance
func NewMockRegistry(ctrl *gomock.Controller) *MockRegistry {
	mock := &MockRegistry{ctrl: ctrl}
	mock.recorder = &MockRegistryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockRegistry) EXPECT() *MockRegistryMockRecorder {
	return m.recorder
}

// GetContent mocks base method
func (m *MockRegistry) GetContent(arg0 context.Context, arg1 v2.ResolvableComponentAccessor) (afero.Fs, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetContent", arg0, arg1)
	ret0, _ := ret[0].(afero.Fs)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetContent indicates an expected call of GetContent
func (mr *MockRegistryMockRecorder) GetContent(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetContent", reflect.TypeOf((*MockRegistry)(nil).GetContent), arg0, arg1)
}

// GetDefinition mocks base method
func (m *MockRegistry) GetDefinition(arg0 context.Context, arg1 v2.ResolvableComponentAccessor) (*v1alpha1.Blueprint, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetDefinition", arg0, arg1)
	ret0, _ := ret[0].(*v1alpha1.Blueprint)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetDefinition indicates an expected call of GetDefinition
func (mr *MockRegistryMockRecorder) GetDefinition(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetDefinition", reflect.TypeOf((*MockRegistry)(nil).GetDefinition), arg0, arg1)
}
